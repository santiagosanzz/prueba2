<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>SantIA - La IA más creativa del universo</title>
    <style>
        body {
            margin: 0;
            padding: 20px;
            background: linear-gradient(45deg, rgb(255, 0, 0), rgb(0, 255, 0), rgb(0, 0, 255));
            background-size: 400%;
            animation: fondoRGB 10s infinite;
            font-family: 'Comic Sans MS', cursive, sans-serif;
            overflow-x: hidden;
        }

        @keyframes fondoRGB {
            0% { background-position: 0% 50%; }
            50% { background-position: 100% 50%; }
            100% { background-position: 0% 50%; }
        }

        h1 {
            font-size: 100px;
            text-align: center;
            color: #ff00ff;
            text-shadow: 5px 5px 10px #00ff00, -5px -5px 10px #0000ff;
            animation: textoBrillante 2s infinite;
            margin-bottom: 20px;
        }

        @keyframes textoBrillante {
            50% { color: #00ff00; text-shadow: 5px 5px 10px #ff0000, -5px -5px 10px #00ffff; }
        }

        .api-key-container {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: rgba(0, 0, 0, 0.8);
            display: flex;
            justify-content: center;
            align-items: center;
            z-index: 1000;
        }

        .api-key-box {
            background: linear-gradient(135deg, rgb(255, 0, 0), rgb(0, 255, 0));
            padding: 20px;
            border-radius: 20px;
            text-align: center;
            box-shadow: 0 0 20px rgb(0, 0, 255);
            animation: fondoRGB 10s infinite;
        }

        .api-key-box input {
            padding: 10px;
            font-size: 20px;
            border: 5px solid rgb(255, 0, 0);
            border-radius: 10px;
            margin-bottom: 10px;
            background: rgb(255, 255, 0);
            color: rgb(255, 0, 0);
        }

        .api-key-box button {
            padding: 10px 20px;
            font-size: 20px;
            background: linear-gradient(45deg, rgb(0, 255, 0), rgb(0, 0, 255));
            border: 5px solid rgb(255, 0, 255);
            border-radius: 10px;
            cursor: pointer;
            transition: transform 0.3s;
            color: rgb(255, 0, 0);
            animation: fondoRGB 10s infinite;
        }

        .api-key-box button:hover {
            transform: scale(1.2);
            background: linear-gradient(45deg, rgb(0, 0, 255), rgb(255, 0, 0));
            color: rgb(0, 255, 255);
        }

        .prompt-container {
            text-align: center;
            margin-top: 20px;
            display: flex;
            flex-direction: column;
            align-items: center;
            gap: 10px;
        }

        textarea {
            width: 80%;
            height: 100px;
            font-size: 20px;
            border: 5px solid rgb(255, 0, 255);
            border-radius: 20px;
            background: rgb(0, 255, 255);
            color: rgb(255, 0, 0);
            padding: 10px;
            resize: none;
            box-shadow: 0 0 20px rgb(255, 0, 255);
        }

        button {
            margin-top: 10px;
            padding: 15px 30px;
            font-size: 25px;
            background: linear-gradient(45deg, rgb(255, 0, 0), rgb(0, 255, 0));
            border: 5px solid rgb(0, 255, 0);
            border-radius: 15px;
            cursor: pointer;
            transition: transform 0.3s;
            color: rgb(255, 0, 0);
            animation: fondoRGB 10s infinite;
        }

        button:hover {
            transform: scale(1.2);
            background: linear-gradient(45deg, rgb(0, 0, 255), rgb(255, 0, 255));
            color: rgb(255, 0, 0);
        }

        .response {
            margin-top: 10px;
            padding: 20px;
            background: linear-gradient(135deg, rgb(0, 255, 0), rgb(255, 0, 255));
            border: 5px solid rgb(255, 255, 0);
            border-radius: 20px;
            color: rgb(255, 0, 0);
            font-size: 20px;
            box-shadow: 0 0 20px rgb(0, 255, 255);
            width: 80%;
            max-height: 300px;
            overflow-y: auto;
            animation: fondoRGB 10s infinite;
        }

        .random-image {
            position: absolute;
            animation: flotar 5s infinite;
            opacity: 0.8;
        }

        @keyframes flotar {
            0% { transform: translateY(0); }
            50% { transform: translateY(-20px); }
            100% { transform: translateY(0); }
        }
    </style>
</head>
<body>
    <!-- Ventana emergente para la clave API -->
    <div class="api-key-container" id="apiKeyContainer">
        <div class="api-key-box">
            <h2 style="color: rgb(255, 255, 0); font-size: 30px;">¡Ingresa tu clave API!</h2>
            <input type="text" id="apiKeyInput" placeholder="Clave API aquí">
            <br>
            <button onclick="guardarApiKey()">Iniciar la experiencia</button>
        </div>
    </div>

    <!-- Título y contenido principal -->
    <h1>SantIA</h1>

    <div class="prompt-container">
        <textarea id="promptInput" placeholder="Escribe tu prompt aquí..."></textarea>
        <button onclick="enviarPrompt()">Generar respuesta</button>
        <div class="response" id="responseOutput"></div>
    </div>

    <!-- Imágenes aleatorias flotantes (URLs actualizadas) -->
    <img src="https://pngimg.com/uploads/pizza/pizza_PNG44077.png" class="random-image" style="width: 100px; top: 10%; left: 10%;">
    <img src="https://pngimg.com/uploads/unicorn/unicorn_PNG43.png" class="random-image" style="width: 150px; top: 50%; right: 5%;">
    <img src="https://pngimg.com/uploads/dinosaur/dinosaur_PNG46.png" class="random-image" style="width: 120px; top: 70%; left: 20%;">
    <img src="https://pngimg.com/uploads/light_bulb/light_bulb_PNG1358.png" class="random-image" style="width: 80px; top: 20%; right: 15%;">
    <script>
        let apiKey = '';

        // Función para guardar la clave API y ocultar la ventana emergente
        function guardarApiKey() {
            apiKey = document.getElementById('apiKeyInput').value;
            if (apiKey) {
                document.getElementById('apiKeyContainer').style.display = 'none';
            } else {
                alert('¡Por favor, ingresa una clave API válida!');
            }
        }

        // Función para enviar el prompt a la API de Google Generative AI
        async function enviarPrompt() {
            const prompt = document.getElementById('promptInput').value;
            const responseOutput = document.getElementById('responseOutput');

            if (!prompt) {
                responseOutput.innerHTML = '¡Escribe algo en el prompt, por favor!';
                return;
            }

            if (!apiKey) {
                responseOutput.innerHTML = '¡No has ingresado una clave API!';
                return;
            }

            responseOutput.innerHTML = 'Generando respuesta...';

            try {
                // Llamada a la API de Google Generative AI (Gemini-2.0-Flash)
                const response = await fetch(`https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=${apiKey}`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({
                        contents: [
                            {
                                parts: [
                                    {
                                        text: prompt
                                    }
                                ]
                            }
                        ]
                    })
                });

                if (!response.ok) {
                    const errorData = await response.json();
                    throw new Error(`Error ${response.status}: ${errorData.error.message}`);
                }

                const data = await response.json();
                const generatedText = data.candidates[0].content.parts[0].text;
                responseOutput.innerHTML = generatedText;
            } catch (error) {
                console.error('Error completo:', error);
                responseOutput.innerHTML = `Error: ${error.message}. Revisa la consola para más detalles.`;
            }
        }
    </script>
</body>
</html>
